type Student{
    studentId  :ID
    studentName:String
    fatherName :String
    address :String
    branch :String
    tenth :Float
    twelth :Float,
    dob:String
    year:Int
    marks:Marks
}
type Marks{
    rollNo: String
    sem1: Int
    sem2: Int
    sem3: Int
    sem4: Int
    sem5: Int
    sem6: Int
    sem7: Int
    sem8: Int
}

type Query{
    allStudent:[Student]
    allStudentMarks:[Marks]
}

type Mutation{
    createStudent(studentData:StudentInput):Student
    addMark(studentMarks: MarksInput):Marks
    generateRollNo:Int
}

input StudentInput{
    studentId  :ID
    studentName:String
    fatherName :String
    address :String
    branch :String
    tenth :Float
    twelth :Float,
    dob:String
    year:Int
}

input MarksInput{
    rollNo: String
    sem1: Int
    sem2: Int
    sem3: Int
    sem4: Int
    sem5: Int
    sem6: Int
    sem7: Int
    sem8: Int
}

